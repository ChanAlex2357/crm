spring.datasource.url=jdbc:mysql://localhost:3306/crm?createDatabaseIfNotExist=true
spring.datasource.username=crm
spring.datasource.password=crm
spring.jpa.hibernate.ddl-auto=none
spring.sql.init.mode=always

spring.security.oauth2.client.registration.google.client-id=874079549525-nmh361dsg351plgdg08q852e5gq57ujr.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid,email,profile
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth?access_type=offline
# spring.security.oauth2.client.provider.google.token-uri=https://accounts.google.com/o/oauth2/token
# Customize the login page URL to include access_type=offline
# spring.security.oauth2.client.registration.google.authorization-uri-template=https://accounts.google.com/o/oauth2/auth?access_type=offline&response_type=code&client_id={clientId}&scope={scopes}&state={state}&redirect_uri={redirectUri}


weather.api.url=http://api.weatherapi.com/v1/current.json
weather.api.key=a93d83147f3c4fff8bc75222252003

app.base-url=http://localhost:8080/

company.name=Easy to build

# Activer les logs SQL
spring.jpa.show-sql=true

# Formater les requêtes SQL pour une meilleure lisibilité
spring.jpa.properties.hibernate.format_sql=true

# Activer les logs des paramètres des requêtes
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE